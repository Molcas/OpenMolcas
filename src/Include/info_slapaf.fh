************************************************************************
* This file is part of OpenMolcas.                                     *
*                                                                      *
* OpenMolcas is free software; you can redistribute it and/or modify   *
* it under the terms of the GNU Lesser General Public License, v. 2.1. *
* OpenMolcas is distributed in the hope that it will be useful, but it *
* is provided "as is" and without any express or implied warranties.   *
* For more details see the full text of the license in the file        *
* LICENSE or in <http://www.gnu.org/licenses/>.                        *
************************************************************************
#include "Molcas.fh"
      Integer   mxdc,MaxItr
      Parameter(mxdc=MxAtom,MaxItr=2000)
*
      Integer   iSym(3), iCoSet(0:7,mxdc), nStab(mxdc),
     &          ipAtom, ipNSup, ipR12, iRef, nQQ, mRowH(10), nRowH,
     &          ipEner, ipGnrm, ipdqInt, ipH, ipQInt, NmIter,
     &          ipShf, ipGrd, ipRlx, ipStat, iter, Lngth, nDimBC,
     &          MxItr, mInt, ipB, ipBt, ipBVec, Max_Center,
     &          ipQ0, ipVal, nSupSy, ipBOld, lif, ipCx, ipGx, ipANr,
     &          iOptC, mode, mTROld, nWndw, iOptH, jStab(0:7,mxdc),
     &          ipMF, nLambda, iRow_c, ipL, ipEner0, ipGx0, nqInt,
     &          nMEP, ipRef, ipGradRef, ipDipM, ipK_Ref, nBVec, IRC,
     &          ipCM, ipCoor, mTtAtm, nsAtom, MEPnum,
     &          RootMap(MxRoot)
      Common /iInfSla/ iSym,ipCoor,ipCM,nsAtom,
     &               ipAtom, ipNSup, ipR12, iRef, nQQ, mRowH,
     &          ipEner, ipGnrm, ipdqInt, ipH, ipQInt, nRowH,
     &          ipShf, ipGrd, ipRlx, ipStat, iter, Lngth, nDimBC,
     &          MxItr, mInt, ipB, ipBt, ipBVec, Max_Center,
     &          ipQ0, ipVal, nSupSy, ipBOld, ipCx, ipGx, lif, mTtAtm,
     &          ipANr, iOptC, mode, mTROld, nWndw, iOptH,
     &          nStab, iCoSet, jStab, ipMF, ipL, NmIter,
     &          nLambda, iRow_c, ipEner0, ipGx0, nMEP, ipRef,
     &          ipGradRef, ipDipM, ipK_Ref, nBVec, IRC, nqInt, MEPnum,
     &          RootMap
*
      Logical Smmtrc(3*mxdc), Stop, lWrite, Exist, Change,
     &        lSup, lOld, CurviLinear,lRowH, HSet, BSet,
     &        lNmHss, Cubic, PDH, Baker, Schlegel,
     &        DDV_Schlegel, Line_Search, HWRS, Analytic_Hessian,
     &        FirstCall, FindTS, MEP, Ref_Geom, lRP, User_Def, Ref_Grad,
     &        rMEP, lOld_Implicit, HrmFrq_Show, eMEPtest,
     &        Redundant, lCtoF, lSoft, CallLast, TwoRunFiles,
     &        TSConstraints, MEPCons, Track, Request_Alaska,
     &        Request_RASSI
      Common /lInfSla/ Smmtrc, Stop, lWrite, Exist, Change,
     &        lSup, lOld, CurviLinear,lRowH,rMEP, HSet, BSet,
     &        lNmHss, Cubic, PDH, Baker, Schlegel,
     &        DDV_Schlegel, Line_Search, HWRS, Analytic_Hessian,
     &        FirstCall, FindTS, MEP, Ref_Geom, lRP, User_Def, Ref_Grad,
     &        lOld_Implicit, HrmFrq_Show, eMEPtest,
     &        Redundant, lCtoF, lSoft, CallLast, TwoRunFiles,
     &        TSConstraints, MEPCons, Track, Request_Alaska,
     &        Request_RASSI
*
      Real*8 Degen(3*mxdc), cMass(3), Trial(3), ThrEne, ThrGrd,
     &       Beta, Beta_Disp, Delta, Rtrnc, rHidden, ThrCons,
     &       GNrm_Threshold, CnstWght, dMEPStep, rFuzz, ThrMEP
*
      Common /rInfSla/ Degen, cMass, Trial, ThrEne, ThrGrd, Beta,
     &                 Beta_Disp, Delta, Rtrnc, rHidden, ThrCons,
     &                 GNrm_Threshold, CnstWght, dMEPStep, rFuzz,
     &                 ThrMEP
*
      Logical   lTherm, lDoubleIso
      Integer   nUserPT, nsRot
      Real*8    UserT(64), UserP
      Common /ThermoChem/ UserT, UserP, nUserPT, nsRot, lTherm,
     &                    lDoubleIso
*
      Character Char*180, Header(144)*1, Line*180, BLine*180, HUpMet*6,
     &          UpMeth*6, AtomLbl(mxdc)*(LENIN), Stat(0:MaxItr)*128,
     &          MEP_Type*10, MEP_Algo*2
      Common /chInfSla/ Char, Header, Line, BLine, HUpMet, UpMeth,
     &                  AtomLbl, Stat, MEP_Type, MEP_Algo
*
      Logical isFalcon
      Common /lFalcon/ isFalcon
