.. index::
   single: Program; ALASKA
   single: ALASKA

.. _UG\:sec\:alaska:

:program:`alaska`
=================

.. only:: html

  .. contents::
     :local:
     :backlinks: none

.. xmldoc:: <MODULE NAME="ALASKA">
            %%Description:
            <HELP>
            This program computes the first derivatives of the one- and
            two-electron integrals with respect to the nuclear positions.
            The derivatives are not stored on files, but contracted
            immediately with the one- and two-electron densities to form the
            molecular gradients.
            </HELP>

This module is automatically invoked by the :program:`Slapaf` module.
This is the preferred mode of operation! In connection with numerical gradients
it will ensure that the rotational and translational invariance is fully
utilized in order to reduce the number of used displacements.

The :program:`Alaska` module compute analytic or for numerical gradients requests the execution of
an alternative module.
The :program:`Alaska` module figures out
the method automatically. Analytic methods are implemented for the HF, MBPT2, KS-DFT, and
RASSCF and SA-CASSCF method. Numerical methods are implemented for SCF, KS-DFT, RASSCF,
MBPT2, CCSDT, the CASPT2 and MS-CASPT2 methods, including the use of the Cholesky
decomposition for the methods were that has been implemented.

Both analytic and numerical procedures are parallelized.

For SA-CASSCF gradient the :program:`Alaska` module will automatically
start up the :program:`MCLR` module if required.

Analytic gradients
------------------

Gradients of the energy with respect to nuclear coordinates can be computed for
any type of wave function as long as an effective first order density matrix, an
effective Fock matrix, and an effective second order density matrix is provided.
The term effective is related to that
these matrices in the case of non-variational parameters in the wave function
(e.q. CI, MP2, CASPT2, etc.) are modified to include contributions from
the associated Lagrange
multipliers. The gradient expression apart from these modifications is
the same for any wave function type. :program:`ALASKA`
is the gradient program, which will generate
the necessary integral derivatives and combine them with the matrices
mentioned in the text above.

.. _UG\:sec\:alaska_description:

Description
-----------

:program:`ALASKA` is written such that gradients can be
computed for any kind of basis function that :program:`SEWARD` will accept.

:program:`ALASKA` is able to compute the following integral derivatives:

* overlap integrals,
* kinetic energy integrals,
* nuclear attraction integrals (point charges or finite nuclei),
* electron repulsion integrals,
* external electric field integrals,
* ECP and PP integrals,
* reaction field integrals,
* and Pauli repulsion integrals.

:program:`ALASKA` employs
two different integration schemes
to generate the
one- and two-electron integral derivatives.
The nuclear attraction and electron repulsion
integrals are evaluated by a modified Rys--Gauss quadrature :cite:`Alaska`.
All other integral
derivatives are evaluated with the Hermite--Gauss quadrature. The same
restriction of the basis sets applies as to :program:`SEWARD`.
None of the integral derivatives are written to disk but rather combined
immediately with the corresponding matrix from the wave function.

At present the following limitations are built into :program:`ALASKA`:

.. include:: ../limitations.inc

Numerical gradients
-------------------

The module is parallelized over the displacements, which in case of large jobs gives a linear
speed up compared to a serial execution, although in order to obtain this it is important to
choose the number of nodes such that the number of contributing perturbations is a multiple of
the number of nodes. For a given molecule the number of perturbations equals the number of atoms
times 6 (a perturbation with plus and minus delta for each of the three axes). Symmetry can of
course reduce this number.

.. _UG\:sec\:alaska_dependencies:

Dependencies
------------

:program:`ALASKA` depends on the density and Fock matrices generated by
:program:`SCF` or :program:`RASSCF`. In addition it needs the basis set
specification defined in :program:`SEWARD`.
The dependencies of the numerical part of the module is the union
of the dependencies of the
:program:`SEWARD`,
:program:`SCF`,
:program:`RASSCF`,
:program:`MBPT2`,
:program:`MOTRA`,
:program:`CCSDT`, and
:program:`CASPT2`
modules.
All these dependencies, however, are totally transparent to the user.

.. _UG\:sec\:alaska_files:

Files
-----

Input files
...........

Apart from the standard input unit :program:`ALASKA`
will use the following input
files: :file:`RYSRW`, :file:`ABDATA`, :file:`ONEINT`, :file:`RUNFILE`
(for more information see :ref:`UG:sec:files_list`).

The files of the
:program:`SEWARD`,
:program:`SCF`,
:program:`RASSCF`,
:program:`MBPT2`,
:program:`MOTRA`,
:program:`CCSDT`, and
:program:`CASPT2`
modules are needed for the numerical procedure.

Output files
............

In addition to the standard output unit :program:`ALASKA` will generate the following
files.

.. class:: filelist

:file:`RUNFILE`
  The :file:`runfile` is updated with information needed by the :program:`SLAPAF`
  relaxation program.
  :program:`ALASKA` will write the molecular Cartesian gradients on this file.

:file:`ALASKA.INPUT`
  File with the latest input processed by :program:`ALASKA`.

.. _UG\:sec\:alaska_input:

Input
-----

Below follows a description of the input to :program:`ALASKA`.
Note that input options are related to the analytic gradient procedure if
not otherwise noted!

In addition to the keywords and the comment lines the input may contain blank
lines. The input is always preceded by the program name: ::

  &ALASKA

Optional keywords for analytical gradients

.. class:: keywordlist

:kword:`TEST`
  With this keyword the program will process only the input.
  It is a debugging aid to help you check your input.

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="TEST" APPEAR="Test" KIND="SINGLE" LEVEL="BASIC">
              %%Keyword: Test <basic>
              <HELP>
              With this keyword the program will process only the input.
              It is a debugging aid to help you check your input.
              </HELP>
              </KEYWORD>

:kword:`NAC`
  Requests a calculation of the nonadiabatic coupling vector between the
  two specified roots in a SA-CASSCF calculation. If the roots are :math:`i`,
  :math:`j`, the vector computed will be :math:`\braket{\Psi_j}{\nabla\Psi_i}`.

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="NAC" APPEAR="Nonadiabatic coupling" KIND="INTS" SIZE="2" LEVEL="BASIC" MIN_VALUE="1">
              %%Keyword: NAC <basic>
              <HELP>
              Requests a calculation of the nonadiabatic coupling vector between the
              two specified roots in a SA-CASSCF calculation.
              </HELP>
              </KEYWORD>

:kword:`NOCSF`
  In a NAC calculation, neglects the so-called CSF contribution.
  Note that this contribution is responsible for the translational and
  rotational non-invariance, and it has been suggested that not including
  it may give more physical results in dynamics simulations :cite:`Fatehi2012`.

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="NOCSF" APPEAR="Do not compute CSF contribution" KIND="SINGLE" LEVEL="ADVANCED" REQUIRE="NAC">
              %%Keyword: NOCSF <advanced>
              <HELP>
              In a NAC calculation, neglects the so-called CSF contribution.
              </HELP>
              </KEYWORD>

:kword:`ONEOnly`
  Compute only the nuclear repulsion and one-electron integrals
  contribution to the gradient. The default is to compute all
  contributions to the molecular gradient.

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="ONEONLY" APPEAR="One-electron integrals only" KIND="SINGLE" LEVEL="ADVANCED">
              %%Keyword:Oneonly <advanced>
              <HELP>
              Compute only the nuclear repulsion and one-electron integrals
              contribution to the gradient. The default is to compute all
              contributions to the molecular gradient.
              </HELP>
              </KEYWORD>

:kword:`CUTOff`
  Threshold for ignoring contributions to the molecular gradient
  follows on the next line. The default is ``1.0d-7``. The prescreening
  is based on the 2nd order density matrix and the radial
  overlap contribution to the integral derivatives.

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="CUTOFF" APPEAR="Gradient threshold" KIND="REAL" MIN_VALUE="0.0" DEFAULT_VALUE="1.0D-7" LEVEL="BASIC">
              %%Keyword: Cutoff <advanced>
              <HELP>
              Specify the threshold for ignoring contributions to the molecular gradient.
              The prescreening
              is based on the 2nd order density matrix and the radial
              overlap contribution to the integral derivatives.
              </HELP>
              The default is 1.0d-7.
              </KEYWORD>

:kword:`OFEMbedding`
  Performs an Orbital-Free Embedding gradient calculation, available only in combination with Cholesky or RI integral representation.
  The runfile of the environment subsystem renamed AUXRFIL is required.
  An example of input for the keyword :kword:`OFEM` is the following: ::

    OFEMbedding
     ldtf/pbe
    dFMD
     1.0

  (see the OPTIONAL keyword :kword:`DFMD` below).
  The keyword :kword:`OFEM` requires the specification of two functionals in the form fun1/fun2, where fun1 is the functional
  used for the Kinetic Energy (available functionals: Thomas--Fermi, with acronym LDTF, and the NDSD functional), and where
  fun2 is the xc-functional (LDA, LDA5, PBE and BLYP available at the moment).

  .. xmldoc:: <GROUP MODULE="ALASKA" NAME="OFEMBED" APPEAR="Orbital-free embedding" KIND="BOX" WINDOW="POPUP" LEVEL="ADVANCED">
              <HELP>
              Orbital-Free Embedding gradient calculation, available only in combination with Cholesky or RI integral representation.
              The runfile of the environment subsystem renamed AUXRFIL is required.
              </HELP>

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="OFEM" APPEAR="Functionals" KIND="STRING" LEVEL="ADVANCED">
              %%Keyword: OFEM <advanced>
              Orbital-Free Embedding gradient calculation, available only in combination with Cholesky or RI integral representation.
              The runfile of the environment subsystem renamed AUXRFIL is required.
              <HELP>
              The keyword OFEM requires the specification of two functionals in the form fun1/fun2
              (see the manual for available functionals)
              </HELP>
              </KEYWORD>

:kword:`DFMD`
  In combination with :kword:`OFEM`, specifies the fraction of correlation potential to be added to the OFE potential
  (zero for KSDFT and one for HF).

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="DFMD" APPEAR="Fraction of correlation" KIND="REAL" LEVEL="ADVANCED" DEFAULT_VALUE="0.0">
              %%Keyword: DFMD <advanced>
              <HELP>
              In combination with OFEM, specifies the fraction of correlation potential to be added to the OFE potential
              (zero for KSDFT and one for HF).
              </HELP>
              </KEYWORD>

  .. xmldoc:: </GROUP>

  .. :kword:`NOINvariance`
       No utilization of the rotational and translational invariance
       of the energy. This is the default.

  .. :kword:`EQUIvalence`
       This option is used to indicate that some of the gradients have
       the same magnitude and only one has to be computed. This line
       is followed by a line with
       ``nGroup``
       being the number of different
       groups that are equivalent. Then on
       ``nGroup``
       subsequent lines follow:
       ``nElem,(index(iElem), iElem = 1, nElem)``
       where ``nElem`` is the
       number of equivalent displacements and index is the index of
       such a displacement. This option will disable the automatic
       utilization of the translational and rotational energy.

  .. :kword:`SELEction`
       This option will allow the user to exclude some symmetrical
       displacements from the list of gradients to compute. This card
       is followed by a line specifying the number of gradients which
       will be computed. A second additional line contains all indices
       of those symmetrical displacements for which we will compute
       gradients. This option will disable the automatic utilization
       of the translational and rotational invariance of the energy.
       The :kword:`Selection` option can be used together with the
       :kword:`Equivalence` option, however,
       for this to work the :kword:`Selection` option has to be specified first.

  .. :kword:`2DOPrescreening`
       This option will activate prescreening based on the 2nd order
       density matrix only. The default prescreening method is the 2DI
       approach which is based on the 2nd order density matrix and
       bounded estimates of the integral gradient.

  .. :kword:`2DIPrescreening`

  .. :kword:`PRINt`

  .. :kword:`NOTRiangular`

:kword:`POLD`
  The gradient is printed in the old format. Note: by default gradient
  is not printed any longer.

  .. xmldoc:: <GROUP MODULE="ALASKA" NAME="PRINT" APPEAR="Print options" KIND="BOX" WINDOW="POPUP" LEVEL="BASIC">

  .. xmldoc:: <SELECT MODULE="ALASKA" NAME="PRINTF" APPEAR="Print format" CONTAINS="POLD,PNEW">

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="POLD" APPEAR="Old format" KIND="SINGLE" LEVEL="BASIC" EXCLUSIVE="PNEW">
              %%Keyword: POLD <basic>
              <HELP>
              The gradient is printed in the old format. Note: by default gradient
              is not printed any longer.
              </HELP>
              </KEYWORD>

:kword:`PNEW`
  The gradient is printed in the new human-readable format.

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="PNEW" APPEAR="New format" KIND="SINGLE" LEVEL="BASIC" EXCLUSIVE="POLD">
              %%Keyword: PNEW <basic>
              <HELP>
              The gradient is printed in the new human-readable format.
              </HELP>
              </KEYWORD>

  .. xmldoc:: </SELECT>

:kword:`VERBose`
  The output will be a bit more verbose.

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="VERBOSE" APPEAR="Verbose printout" KIND="SINGLE" LEVEL="BASIC">
              %%Keyword: Verbose <basic>
              <HELP>
              The output will be a bit more verbose.
              </HELP>
              </KEYWORD>

:kword:`SHOW gradient contributions`
  The gradient contributions will be printed.

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="SHOW" APPEAR="Show contributions" KIND="SINGLE" LEVEL="BASIC">
              %%Keyword: Show <basic>
              <HELP>
              The gradient contributions will be printed.
              </HELP>
              </KEYWORD>

  .. xmldoc:: </GROUP>

Optional keywords for numerical gradients

.. class:: keywordlist

:kword:`NUMErical`
  Forces the use of numerical gradients even if analytical ones
  are implemented. The default is to use analytical gradients whenever
  possible.

  .. xmldoc:: <GROUP MODULE="ALASKA" NAME="NUMGRAD" APPEAR="Numerical gradient" KIND="BOX" WINDOW="POPUP" LEVEL="BASIC">

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="NUMERICAL" APPEAR="Force numerical gradient" KIND="SINGLE" LEVEL="BASIC">
              %%Keyword: Numerical <basic>
              <HELP>
              Forces the use of numerical gradients even if analytical ones
              are implemented. The default is to use analytical gradients whenever
              possible.
              </HELP>
              </KEYWORD>

:kword:`ROOT`
  Specifies which root to compute the gradient for, if there is more than
  one root to choose from. In a RASSCF optimization, the default is to
  compute the gradient for the same root as is relaxed. In a MS-CASPT2 calculation, the
  default is to compute it for root 1. It can be used to override the default
  root in an analytical calculation too.

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="ROOT" APPEAR="Root selection" KIND="INT" LEVEL="ADVANCED" MIN_VALUE="1">
              %%Keyword: Root <advanced>
              <HELP>
              Specifies which root to compute the gradient the geometry for, if there is more than
              one root to choose from. In a RASSCF optimization, the default is to
              compute the gradient for the same root as is relaxed. In a MS-CASPT2 calculation, the
              default is to compute it for root 1.
              </HELP>
              </KEYWORD>

:kword:`DELTa`
  For use with numerical gradients only!
  The displacement for a given center is chosen as the distance to the nearest
  neighbor, scaled by a factor. This factor can be set through the :kword:`DELTa`
  keyword. The default value is :math:`0.01`.

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="DELTA" APPEAR="Displacement value" KIND="REAL" LEVEL="ADVANCED" DEFAULT_VALUE="0.01" MIN_VALUE="0.0">
              %%Keyword: Delta <advanced>
              <HELP>
              For use with numerical gradients only!
              The displacement for a given center is chosen as the distance to the nearest
              neighbor scaled by a factor. This factor can be set through the DELTa
              keyword. The default is 0.01.
              </HELP>
              </KEYWORD>

:kword:`KEEPOldGradient`
  When computing numerical gradients with constraints, the gradient of the constrained degrees
  of freedom is normally set to zero. If this keyword is specified, the existing value of the gradient
  (probably computed analytically with a different method) is maintained instead.
  This is used in combination with :kword:`NGEXclude` in :program:`Gateway` (or "phantom"
  constraints), to set up composite gradients :cite:`Stenrup2015`.

  .. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="KEEP" APPEAR="Keep old gradient" KIND="SINGLE" LEVEL="ADVANCED">
              %%Keyword: KeepOldGradient <advanced>
              <HELP>
              Keep the existing gradient for constrained coordinates when doing numerical differentiation.
              </HELP>
              </KEYWORD>

  .. xmldoc:: </GROUP>

The following is an example of an input which will work for
almost all practical cases. Note that it is very rarely that you need to run
this program explicitly. It is usually controlled by the program
:program:`Slapaf`. ::

  &Alaska

.. xmldoc:: <KEYWORD MODULE="ALASKA" NAME="AUTO" KIND="SINGLE" LEVEL="UNDOCUMENTED" />

.. xmldoc:: </MODULE>
